image: atlassian/default-image:2

clone:
      depth: full  # SonarCloud scanner needs the full history to assign issues properly

definitions:
      caches:
            sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
      steps:
      - step: &build-test-sonarcloud
              name: Build, test and analyze on SonarCloud
              caches:
              - node         
              - sonar
              script: # Build your project and run
              - npm install
              - pipe: sonarsource/sonarcloud-scan:1.0.1
      
      - step: &check-quality-gate-sonarcloud
              name: Check the Quality Gate on SonarCloud
              script:
              - pipe: sonarsource/sonarcloud-quality-gate:0.1.3

      - step: &build-and-publish-docker-image
              name: Build docker image
              services:
                - docker #Enable Docker
              script:
              # Set image tag to commit hash
              - export IMAGE_NAME="${DOCKERHUB_USERNAME}/robobot-back-end:${BITBUCKET_COMMIT}"
              
              # Build Docker image and push to Dockerhub      
              - docker login -u ${DOCKERHUB_USERNAME} --password ${DOCKERHUB_PASSWORD}
              - docker build -t $IMAGE_NAME .
              - docker push $IMAGE_NAME

      - step: &deploy-to-aws-ecs
              name: Deploy to AWS ECS
              script:
              - export IMAGE_NAME="${DOCKERHUB_USERNAME}/robobot-back-end:${BITBUCKET_COMMIT}"
              - envsubst < task-definition-template.json > task-definition.json

              # Update the task definition.
              - pipe: atlassian/aws-ecs-deploy:1.0.0
                variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                  CLUSTER_NAME: 'Robobot'
                  SERVICE_NAME: 'Robobot-Backend-Service'
                  TASK_DEFINITION: 'task-definition.json'


pipelines:             
  branches:
    '**':
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud
      - step: *build-and-publish-docker-image
  pull-requests:
    '**':
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud